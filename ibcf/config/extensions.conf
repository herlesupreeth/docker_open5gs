
; extensions.conf - the Asterisk dial plan
;
; Static extension configuration file, used by
; the pbx_config module. This is where you configure all your
; inbound and outbound calls in Asterisk.
;
; This configuration file is reloaded
; - With the "dialplan reload" command in the CLI
; - With the "reload" command (that reloads everything) in the CLI

;
; The "General" category is for certain variables.
;
[general]
;
; If static is set to no, or omitted, then the pbx_config will rewrite
; this file when extensions are modified.  Remember that all comments
; made in the file will be lost when that happens.
;
; XXX Not yet implemented XXX
;
static=yes
;
; if static=yes and writeprotect=no, you can save dialplan by
; CLI command "dialplan save" too
;
writeprotect=yes
;
; If autofallthrough is set, then if an extension runs out of
; things to do, it will terminate the call with BUSY, CONGESTION
; or HANGUP depending on Asterisk's best guess. This is the default.
;
; If autofallthrough is not set, then if an extension runs out of
; things to do, Asterisk will wait for a new extension to be dialed
; (this is the original behavior of Asterisk 1.0 and earlier).
;
;autofallthrough=no
;
;
;
; If extenpatternmatchnew is set (true, yes, etc), then a new algorithm that uses
; Trie
extenpatternmatchnew=no
;
; If clearglobalvars is set, global variables will be cleared
; and reparsed on a dialplan reload, or Asterisk reload.
;
; If clearglobalvars is not set, then global variables will persist
; through reloads, and even if deleted from the extensions.conf or
; one of its included files, will remain set to the previous value.
;
; NOTE: A complication sets in, if you put your global variables into
; the AEL file, instead of the extensions.conf file. With clearglobalvars
; set, a "reload" will often leave the globals vars cleared, because it
; is not unusual to have extensions.conf (which will have no globals)
; load after the extensions.ael file (where the global vars are stored).
; So, with "reload" in this particular situation, first the AEL file will
; clear and then set all the global vars, then, later, when the extensions.conf
; file is loaded, the global vars are all cleared, and then not set, because
; they are not stored in the extensions.conf file.
;
clearglobalvars=yes
;
; User context is where entries from users.conf are registered.  The
; default value is 'default'
;


; Welcome to Asterisk Dialplan!! its not complicated, you will get use to it in just a "few" tries
userscontext=unspecified


; Here are some deffined variables that will be used in the dialplan, some of them must be adjusted to your need!

; I use a german Trunk so I have the +49, adjust depand on your country, this is used on incoming, as my provider sends only E164 numbers.
[globals]
INTERNAL_DIAL_OPT=,30
ENUM_PREFIX_FOR_DE=+49

; this this the head number, you need to change it to teh value provided by your providers, in consist of 10 digit, this is important as we will cut the number and normalize it before it enters the IMS Core, there is various names for Head number like : Direct dial in .. prefix numbers..etc so its basiclly the number from your SIPTrunk Provider that can be extended and add digits to it
 
PHONE_NR_HEAD=1234567890

; Dont change
ICP_OUT=ICP_LINK_out
ICP_IN=ims_core
; change to your provider's provided domain
SIPTRUNK_DOMAIN=PROVIDER_DOMAIN
; Dont change
IMS_CN_DOMAIN=IMS_DOMAIN
PAI_HEADER=P-Asserted-Identity
PPI_HEADER=P-Preferred-Identity
NO_FORK=Request-Disposition
P_HEADER=P-Early-Media
X_HEADER=P-MeinSipTrunk

; now the dial plan, here is an explnination so you can adjust what you need to make it able to proccess calls and send it to and from teh IMS Core
; in "incoming" in my case i used an internal MSISDN for my open5GS Netwrok 0912584710 as you see this is a private self generated number.
; in normal world there is a shared Database for all operator so they know that a numer belong to a specific operator, in our case the netwrok is private and our
; numbers are unknown to teh wolrd, so I had to do a trick, this trick consist of the head numer provided from my SIPTrunk provider adding the UE MSISDN to it liek that:
; CC+HEADER_NUMER+MSSIDN = +49 228 1234567 0912584710 and then cut or add the CC+HEADER_NUMER depanding on the direction :
; to IMS Core cute CC+HEADER_NUMER, if to outside world then add CC+HEADER_NUMER
; this is using the ${EXTEN:n} "n" is where the digit that need to stay along with the digits the come after it. in my case its the 0, so the results will be 0912584710 that will
; be recognized insdie my private network, this need to be adjusted depand on the your needs like the lenth of your Head number and your MSISDN.
; after doing that we need to send the call to the ICSCF as we dont know where the user is registred, the rest will be done insdie the IMS Core+Open5GS
;
; its preconfigured here on digit 13 ( UK users please change it! not to trigger any bad luck!) 


[incoming]

;              +49               228 1234567   + any
exten => _${ENUM_PREFIX_FOR_DE}${PHONE_NR_HEAD}X.,1,Verbose(incoming call from ICP from ${CALLERID(num)} calling to ${EXTEN:13})
same => n,Verbose(check for exten ${EXTEN} 8 ${EXTEN:8} 9 ${EXTEN:9} 10 ${EXTEN:10} 11 ${EXTEN:11} 13 ${EXTEN:13} )
; cutting until digi 13               CUT0912584710 set some headers and send to icscf to reach the users
same => n,Dial(PJSIP/${ICP_IN}/sip:${EXTEN:13}@${IMS_CN_DOMAIN},120,b(outgoing^ims_inc^1))
same => n,Hangup()

[outgoing]

; Due to diffrent way that the devices do calls there is two way defined here eather the call will start with 0 ( in teh IMS is not possbile) or with +

; here is with 0, its not applicale, our IMS is 3gpp compitable so it has always E164
exten => _0X.,1,Verbose(outgoing conext leading null ${EXTEN} calling from IMS User ${CALLERID(num)} )
same => n,Dial(PJSIP/${ICP_OUT}/sip:${ENUM_PREFIX_FOR_DE}${EXTEN:1}@${SIPTRUNK_DOMAIN},120,b(outgoing^headers^1))
same => n,Hangup()


; here is the used one as we use E164 in IMS
exten => _${ENUM_PREFIX_FOR_DE}X.,1,Verbose(outgoing Call leading +49 calling from IMS User ${CALLERID(num)} to ${EXTEN} )
same => n,Verbose(Sending INVITE to ICP)
; we set the head number and add the MSISDN to it then set it in the "From" header
same => n,Set(CALLERID(num)=${ENUM_PREFIX_FOR_DE}${PHONE_NR_HEAD}${CALLERID(num)})
; setting some headers and sends the INVITE to the Provdier/ICP
same => n,Dial(PJSIP/${ICP_OUT}/sip:${EXTEN}@${SIPTRUNK_DOMAIN},120,b(outgoing^ims_out^1))
same => n,Hangup()

; this headers used in outgoing 
exten => ims_out,1,Verbose(Setting required headers in outgoing INVITE)
; setting the P-Preferred-Identity and optionally P-Preferred-Identity ( PAI is only a Networ thing) here we do the the as we done with From:
; adding the MSISDN ot the head number before sending it out.
same => n,Set(PJSIP_HEADER(add,${PPI_HEADER})=<sip:${ENUM_PREFIX_FOR_DE}${PHONE_NR_HEAD}${CONNECTEDLINE(num)}@${SIPTRUNK_DOMAIN}>)
same => n,Set(PJSIP_HEADER(add,${PAI_HEADER})=<sip:${ENUM_PREFIX_FOR_DE}${PHONE_NR_HEAD}${CONNECTEDLINE(num)}@${SIPTRUNK_DOMAIN}>)
; Setting P-Early-Media to Supported, Asterisk know nothing about RFC5009, but its required by 3GPP, so we can only cheat here sorry!
same => n,Set(PJSIP_HEADER(add,${P_HEADER})=Supported)
same => n,Set(PJSIP_HEADER(add,Supported)=199)
same =>	n,Return()

; for incoming we need to set the PAI, some devices need this header
exten => ims_inc,1,Verbose(Setting required headers in incoming INVITE)
same => n,Set(PJSIP_HEADER(add,${PAI_HEADER})=<tel:${CONNECTEDLINE(num)}>)
same => n,Set(PJSIP_HEADER(add,${PAI_HEADER})=<sip:${CONNECTEDLINE(num)}@${IMS_CN_DOMAIN}>)
same => n,Set(PJSIP_HEADER(add,${P_HEADER})=Supported)
same => n,Set(PJSIP_HEADER(add,Supported)=199)
same =>	n,Return()

[IMS_INC]

include => outgoing

;;;;;;; Voicemail IMS, this is a WIP, need to add appreciate IFC for it, dont forget to confgure your MSISDN in the voicemail.conf!!

; configure teh start of your number instaed of "09125" eg. if your MSISDN start with 09125123456 then exten => _09125X.
exten => _09125X.,1,Verbose(1, Caller ${CALLERID(all)} has entered Voicemail for ${EXTEN} from IMS )
same => n,VoiceMail(${EXTEN})

exten => 500,1,Ringing()
exten => 500,n,Wait(2)
exten => 500,n,Answer
exten => 500,n,Wait(2)
exten => 500,n,VoiceMailMain(${CALLERID(num)})
exten => 500,n,HangUp()
exten => 500,n,PlayBack(vm-goodbye)
exten => 500,n,HangUp() 

